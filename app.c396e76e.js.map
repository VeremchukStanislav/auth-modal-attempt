{"version":3,"sources":["login.js","utils.js","auth.js","app.js"],"names":["Login","login","fetch","method","body","JSON","stringify","headers","then","response","json","id","name","addToLocalStorage","renderList","token","error","Object","keys","map","key","Promise","resolve","logins","length","q","text","join","all","getloginsFromLocalStorage","push","localStorage","setItem","createModal","title","content","modal","document","createElement","classList","add","innerHTML","mui","overlay","getAuthForm","authWithEmailAndPassword","email","password","apiKey","returnSecureToken","data","idToken","modalBtn","getElementById","openModal","addEventListener","authFormHandler","once","event","preventDefault","btn","target","querySelector","value","disabled","renderModalAfterAuth","listToHTML"],"mappings":"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","file":"app.c396e76e.js","sourceRoot":"../src","sourcesContent":["export class Login {\n  static create(login) {\n    return fetch('https://auth-modal-f7e24-default-rtdb.europe-west1.firebasedatabase.app/logins.json', {\n      method: 'POST',\n      body: JSON.stringify(login),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        login.id = response.name\n        return login\n      })\n      .then(addToLocalStorage)\n      .then(Login.renderList)\n  }\n\n  static fetch(token) {\n    if (!token) {\n      return Promise.resolve('<p class=\"error\">У вас нет токена</p>')\n    }\n    return fetch(`https://auth-modal-f7e24-default-rtdb.europe-west1.firebasedatabase.app/logins.json?auth=${token}`)\n      .then(response => response.json())\n      .then(response => {\n        if (response && response.error) {\n          return `<p class=\"error\">${response.error}</p>`\n        }\n\n        return response ? Object.keys(response).map(key => ({\n          ...response[key],\n          id: key\n        })) : []\n      })\n  }\n\n  static listToHTML(logins) {\n    return logins.length\n      ? `<ol>${logins.map(q => `<li>${q.text}</li>`).join('')}</ol>`\n      : '<p>Пока ничего не смотрели</p>'\n  }\n}\n\nfunction addToLocalStorage(login) {\n  const all = getloginsFromLocalStorage()\n  all.push(login)\n  localStorage.setItem('logins', JSON.stringify(all))\n}\n","export function createModal(title, content) {\n  const modal = document.createElement('div')\n  modal.classList.add('modal')\n\n  modal.innerHTML = `\n    <h1>${title}</h1>\n    <div class=\"modal-content\">${content}</div>\n  `\n\n  mui.overlay('on', modal)\n}\n","export function getAuthForm() {\n  return `\n    <form class=\"mui-form\" id=\"auth-form\">\n      <div class=\"mui-textfield mui-textfield--float-label\">\n        <input type=\"email\" id=\"email\" required>\n        <label for=\"email\">Email</label>\n      </div>\n      <div class=\"mui-textfield mui-textfield--float-label\">\n        <input type=\"password\" id=\"password\" required>\n        <label for=\"password\">Пароль</label>\n      </div>\n      <button\n        type=\"submit\"\n        class=\"mui-btn mui-btn--raised mui-btn--primary\"\n      >\n        Войти\n      </button>\n    </form>\n  `\n}\n\nexport function authWithEmailAndPassword(email, password) {\n  const apiKey = 'AIzaSyDIwdXP5VEbTh2z8iuw4cKftPCCieqja2U'\n  return fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, {\n    method: 'POST',\n    body: JSON.stringify({\n      email, password,\n      returnSecureToken: true\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n    .then(data => data.idToken)\n}\n","import {Login} from './login'\nimport {createModal} from './utils'\nimport {authWithEmailAndPassword, getAuthForm} from './auth'\nimport './styles.css'\n\nconst modalBtn = document.getElementById('modal-btn')\n\n\nmodalBtn.addEventListener('click', openModal)\n\n\nfunction openModal() {\n  createModal('Авторизация', getAuthForm())\n  document\n    .getElementById('auth-form')\n    .addEventListener('submit', authFormHandler, {once: true})\n}\n\nfunction authFormHandler(event) {\n  event.preventDefault()\n\n  const btn = event.target.querySelector('button')\n  const email = event.target.querySelector('#email').value\n  const password = event.target.querySelector('#password').value\n\n  btn.disabled = true\n  authWithEmailAndPassword(email, password)\n    .then(Login.fetch)\n    .then(renderModalAfterAuth)\n    .then(() => btn.disabled = false)\n}\n\nfunction renderModalAfterAuth(content) {\n  if (typeof content === 'string') {\n    createModal('Ошибка!', content)\n  } else {\n    createModal('Список фильмов', Login.listToHTML(content))\n  }\n}\n"]}